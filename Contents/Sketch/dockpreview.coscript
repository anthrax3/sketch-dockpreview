@import 'sandbox.js'

var app = NSApplication.sharedApplication();
var temp = {};

var dockpreview = {

    /**
     * Creates a folder at given path. If the application runs in
     * sandboxed mode, it will prompt the user for permission.
     * @param  {String} path The path to create the folder
     */
    createFolder: function (path) {
        var file_manager = [NSFileManager defaultManager];
        this.runMethodSandbox(path, function () {
            [file_manager createDirectoryAtPath:path
                withIntermediateDirectories:true
                attributes:nil
                error:nil];
        });
    },

    /**
     * Creates a temporary folder at a auto-generated temporary path.
     */
    createTempFolder: function() {
        var guid = NSProcessInfo.processInfo().globallyUniqueString(),
            tmpPath = NSTemporaryDirectory().stringByAppendingPathComponent(guid);
        //var tmpURL = [NSURL fileURLWithPath:tmpPath isDirectory:true];
        this.createFolder(tmpPath);
        temp.path = tmpPath;
    },

    /**
     * Exports artboard to an image file and sets the application icon
     * to the exported image file.
     * @param {Object} context The context of the application
     */
    setAppIconImage: function(context) {
        var artboard = this.getCurrentArtboard(),
        imgFile = temp.path + '/dockpreview-preview.tmp.png';
        this.runMethodSandbox(imgFile, function () {
            [doc saveArtboardOrSlice:artboard toFile:imgFile];
        });
        var img = NSImage.alloc().initByReferencingFile(imgFile);
        [app setApplicationIconImage:img];
    },

    /**
     * Restores the application icon to the application's icon.
     * @param {Object} context The context of the application
     */
    restoreAppIconImage: function (context) {
        var bundle = NSBundle.mainBundle(),
            icon;
        if (app.applicationName() == 'Sketch Beta') {
            icon = [bundle pathForResource:@"beta" ofType:@"icns"];
        } else {
            icon = [bundle pathForResource:@"app" ofType:@"icns"];
        }
        img = NSImage.alloc().initByReferencingFile(icon);
        [app setApplicationIconImage:img];
    },

    // @TODO: Implement status item previewing
    setStatusItemImage: function(statusItem) {
        var artboard = this.getCurrentArtboard(),
        imgFile = temp.path + '/dockpreview-preview.tmp.png';
        this.runMethodSandbox(imgFile, function () {
            [doc saveArtboardOrSlice:artboard toFile:imgFile];
        });
        var img = NSImage.alloc().initByReferencingFile(imgFile);
        var barHeight = app.mainMenu.menuBarHeight;
        var width = 16;
        [img setTemplate:true];
        log(img);
        [statusItem setImage:img];
        log(statusItem);
    },

    /**
     * Returns the current artboard from given context.
     * @param {Object} context The context of the application
     */
    getCurrentArtboard: function (context) {
        var doc = context.document;
        var page = doc.currentPage();
        return page.currentArtboard();
    },

    runMethodSandbox: function(path, method) {
        if(in_sandbox()) {
            sandboxAccess.accessFilePath_withBlock_persistPermission(path, method, true);
        } else {
            method();
        }
    }
};

dockpreview.createTempFolder();
